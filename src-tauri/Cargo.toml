[package]
name = "netmount"
description = "NetMount"
version = "1.1.2"
authors = ["VirtualHotBar"]
license = "AGPL-3.0"
repository = ""
default-run = "netmount"
edition = "2021"
rust-version = "1.76"

[package.metadata.windows]
manifest = "app.manifest"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
anyhow = "1"
itertools = "0"
tauri-build = { version = "2.0.0-rc.0", features = [] }
indicatif = "0.17.8"
reqwest = { version = "0.11", features = ["json", "stream", "blocking"] }
futures-util = "0.3"
zip = "1.1.4"
tokio = { version = "1", features = ["full"] }
tar = "0.4.40"
flate2 = { version = "1.0.30", features = ["zlib"] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0.0-rc.6", features = [
    "macos-private-api",
    "devtools",
    "tray-icon",
] }
anyhow = "1"
anyhow-tauri = "1"
phf = { version = "0.11", features = ["macros", "serde"] }
rand = "0.8"
reqwest = { version = "0.11", features = ["json", "stream"] }
tokio = { version = "1", features = ["full"] }
futures-util = "0.3"
tauri-plugin-shell = "2.0.0-rc.2"
tauri-plugin-os = "2.0.0-rc.0"
tauri-plugin-fs = "2.0.0-rc.0"
tauri-plugin-process = "2.0.0-rc.0"
tauri-plugin-autostart = "2.0.0-rc.0"
tauri-plugin-single-instance = "2.0.0-rc.0"
tauri-plugin-dialog = "2.0.0-rc.2"

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
winapi = "0.3"
widestring = "1.1"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
